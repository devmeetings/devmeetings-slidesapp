{
  "name": "formage",
  "description": "Admin GUI addon for mongoose, jugglingdb, or just as a form generator",
  "version": "3.0.13",
  "main": "lib/Formage.js",
  "author": {
    "name": "Refael Ackermann",
    "email": "refael@empeeric.com",
    "url": "http://www.empeeric.com/"
  },
  "contributors": [
    {
      "name": "Ishai Jaffe",
      "email": "ishai@bablic.com",
      "url": "http://www.bablic.com/"
    },
    {
      "email": "etaypere@gmail.com",
      "url": "http://www.empeeric.com/"
    },
    {
      "name": "Alon Valadji",
      "email": "alon@empeeric.com",
      "url": "http://www.empeeric.com/"
    }
  ],
  "dependencies": {
    "async": "",
    "body-parser": "latest",
    "cloudinary": "",
    "connect-multiparty": "",
    "cookie-session": "",
    "debug": "",
    "formage-mongoose-types": "",
    "grist": "",
    "lodash": "",
    "lodash-contrib": "",
    "lru-cache": "",
    "mpromise": "^0.5.4",
    "node-ckeditor": "",
    "nodestrum": "",
    "serve-static": "latest",
    "socket.io": "^1.0.0",
    "asynctrace": ""
  },
  "devDependencies": {
    "bower": "",
    "chai": "",
    "express": "< 4",
    "istanbul": "",
    "jade": "0.35.x",
    "jshint": "",
    "jugglingdb": "",
    "mocha": "",
    "mongoose": ""
  },
  "optionalDependencies": {
    "asynctrace": ""
  },
  "peerDependencies": {
    "express": "< 4",
    "mongoose": ">= 3.8.0"
  },
  "keywords": [
    "admin",
    "forms",
    "cross-database",
    "MongoDB",
    "MongoDB-admin",
    "MongoDB-GUI",
    "grist",
    "mongoose",
    "mongoose-gui",
    "juggling",
    "jugglingdb",
    "backoffice",
    "cms"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Empeeric/formage"
  },
  "scripts": {
    "start": "node example/classic/app",
    "test": "npm run generate && mocha",
    "lint": "jshint .",
    "cover": "istanbul cover ./node_modules/mocha/bin/_mocha -x generated/**",
    "generate": "node utils/CompileTempletes.js",
    "setassets": "npm run generate && bower i && git clean -X -d -f assets",
    "prepublish": "npm run generate",
    "mypublish": "npm run setassets && npm shr && npm version patch && git push --follow-tags"
  },
  "directories": {
    "example": "./example"
  },
  "engines": {
    "node": "^0.10.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/Empeeric/formage/master/LICENSE"
    }
  ],
  "jshintConfig": {
    "esnext": true,
    "expr": true,
    "forin": true,
    "freeze": true,
    "globals": {
      "after": true,
      "before": true,
      "describe": true,
      "expect": true,
      "it": true,
      "Promise": false
    },
    "immed": true,
    "maxdepth": 4,
    "newcap": true,
    "noarg": true,
    "node": true,
    "noempty": true,
    "nonew": true,
    "scripturl": true,
    "sub": true,
    "supernew": true,
    "trailing": true,
    "undef": true,
    "unused": true
  },
  "readme": "# <img src=\"http://i.imgur.com/9vVHCPY.png\" align=\"top\" /> Formage \n\n[Bootstraped](http://twitter.github.com/bootstrap/) Admin GUI addon for [Mongoose](http://mongoosejs.com/), [JugglingDB](https://github.com/1602/jugglingdb), or just as a form generator.\nOriginally forked from [mongoose-admin](https://github.com/marccampbell/mongoose-admin).\n\n[![Build Status](https://travis-ci.org/Empeeric/formage.png?branch=master \"Build Status\")](https://travis-ci.org/Empeeric/formage) \n\n<!-- [![NPM](https://nodei.co/npm-dl/formage.png)](https://nodei.co/npm/formage/) -->\n\n## Example Usage\n```js\nvar express = require('express'),\n    app = express();\n\nrequire('formage').init(app, express, models]);\n```\n\nLook at the `\\example` directory.\n\n### Options\n```js\n// Site-wide options, and their default values\nrequire('formage').init(app, express, models, {\n    title: 'Admin',\n    root: '/admin',\n    default_section: 'main',\n    username: 'admin',\n    password: 'admin',\n    admin_users_gui: true\n});\n```\n\n#### Model options\n```js\nvar model = new mongoose.model('songs', schema);\n\n// external files specific to this model\nmodel.header_lines = [\n   '<script src=\"/js/songs.js\"></script>',\n   '<style href=\"/css/songs.css\"></style>'\n];\n\nmodel.formage = {\n    // one-document models\n    is_single: true,\n\n    // labels\n    label: 'My Songs',\n    singular: 'Song',\n\n    filters: ['artist', 'year'],\n\n    // additional actions on this model\n    actions: [\n       {\n          id: 'release',\n          label: 'Release',\n          func: function (user, ids, callback) {\n             console.log('You just released songs ' + ids);\n             callback();\n          }\n       }\n    ],\n\n    // list of fields to be displayed by formage for this model\n    list: ['number', 'title', 'album', 'artist', 'year'],\n    \n    // order documents, save order in this field (type: Number)\n    sortable: 'order',\n\n    // list of order fields\n    order_by: ['-year', 'album', 'number'],\n\n    // list of fields that must be populated\n    // (see http://mongoosejs.com/docs/api.html#document_Document-populate)\n    list_populate: ['album'],\n\n    // list of fields on which full-text search is available\n    search: ['title', 'album', 'artist']\n};\n```\n\n#### Fields\nFormage comes with the following built-in fields,\nbut [custom fields](https://github.com/Empeeric/formage/wiki/Custom-Fields) can be written if needed.\n- String\n- Boolean\n- Number\n- Date\n- Time\n- Enum ([select2](http://ivaynberg.github.io/select2/))\n- Ref ([select2](http://ivaynberg.github.io/select2/))\n- Text (`<textarea>`)\n- HTML ([ckeditor](http://ckeditor.com/))\n- FilePicker ([File Picker](https://www.inkfilepicker.com/))\n- Picture ([Cloudinary](http://cloudinary.com/))\n- GeoPoint ([Google Maps](https://maps.google.com/))\n\nYou can pass options to the underlying fields and widgets:\n```js\nvar schema = new mongoose.Schema({\n    artist: { type: String, label: 'Who made it?' },\n    location: { type: Schema.Types.GeoPoint, widget_options: { lang: 'nl' }}\n});\n```\n(The map widget lang setting is a two-letter [ISO 639-1](http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) code.)\n\n#### Hmm\n- [Extend formage with your custom field](https://github.com/Empeeric/formage/wiki/Custom-Fields)\n- [Embed a formage form outside of the admin](https://github.com/Empeeric/formage/wiki/Outing-Formage-Form)\n\nLicense\n-------\nMIT\n\nSponsor\n--------\n<a id=\"stormlogo\" href=\"http://www.jetbrains.com/webstorm/\" alt=\"Smart IDE for web development with HTML Editor, CSS &amp; JavaScript support\" title=\"Smart IDE for web development with HTML Editor, CSS &amp; JavaScript support\">\n  ![](http://i.imgur.com/ynQ6c.png)\n</a>\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Empeeric/formage/issues"
  },
  "homepage": "https://github.com/Empeeric/formage",
  "_id": "formage@3.0.13",
  "_from": "formage@~3.0.13"
}
