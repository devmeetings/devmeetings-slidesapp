extends layout

block content
    .row
      .col-lg-12
        form.form-inline.pull-right
            .form-group
                select.form-control.mode-chooser
                    option(value="java") Java
                    option(value="node") Node.js
    .row
      .col-lg-12
        br
        div
            span.editor-change-size.glyphicon.glyphicon-fullscreen
            .code-editor.editor(
            class="big" 
            )
        textarea.code-java(style="display:none").
            import java.util.Random;

            public class TestClass {

              public static int rand() {
                return new Random().nextInt();
              }

              public static String main() {
                StringBuilder builder = new StringBuilder();
                builder.append("Hello ");
                builder.append("world !");
                builder.append(rand());
                return builder.toString();
              }

            }
        textarea.code-node(style="display:none").
            var fs = require('fs');

            console.log(Object.keys(fs));
            console.log("Test");
    .row
      .col-lg-12
        .errors.alert.alert-danger.errors-code
    br
    .output.row
      .col-sm-12
        .output-ace.editor
append scripts
    script(src="js/ace-builds/src-noconflict/ace.js")
    script.
        var modes = {
            java: {
                queue: 'run',
                ace: 'java'
            },
            node: {
                queue: 'run_node',
                ace: 'javascript'
            }
        };
        var mode = 'java';
        var applyMode = function() {
            var code = document.querySelector('.code-'+mode).value;
            editor.setValue(code);
            editor.getSession().setMode('ace/mode/' + modes[mode].ace);
        };
        $('.mode-chooser').on('change', function(){
            mode = $(this).val();
            applyMode();
        });
        var editor = ace.edit(document.querySelector(".code-editor"));
        editor.setTheme("ace/theme/todr");

        var output = ace.edit(document.querySelector('.output-ace'));
        output.setTheme("ace/theme/twilight");
        output.setReadOnly(true);
        output.setHighlightActiveLine(false);
        output.setShowPrintMargin(false);
        output.renderer.setShowGutter(false);

        var errors = document.querySelector('.errors');

        var runContent = function() {
            var code = editor.getValue();
    
            var call = $.ajax({
                url: '/execute', 
                method: 'post',
                contentType: 'application/json',
                data: JSON.stringify({
                    queue: modes[mode].queue,
                    code: code
                }),
                timeout: 10000,
                success: function(data) {
                    data = JSON.parse(data);
                    errors.innerHTML = data.errors || "";
                    output.setValue(data.result);
                },
                error: function() {
                    errors.innerHTML = 'It seems that execution server is not running.';
                }
            });
        };

        editor.on('change', _.debounce(runContent, 10));
        applyMode();
